{"version":3,"sources":["webparts/listInfo/ListInfoWebPart.ts"],"names":[],"mappings":"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","file":"webparts/listInfo/ListInfoWebPart.js","sourcesContent":["import { Version } from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneTextField\r\n} from '@microsoft/sp-webpart-base';\r\nimport { SPHttpClient, SPHttpClientResponse } from '@microsoft/sp-http';\r\nimport { escape } from '@microsoft/sp-lodash-subset';\r\n\r\nimport styles from './ListInfoWebPart.module.scss';\r\nimport * as strings from 'ListInfoWebPartStrings';\r\n\r\nexport interface IListInfoWebPartProps {\r\n  description: string;\r\n  listName: string;\r\n}\r\n\r\n\r\nexport default class ListInfoWebPart extends BaseClientSideWebPart<IListInfoWebPartProps> {\r\n\r\n  public render(): void {\r\n    this.domElement.innerHTML = `\r\n      <div class=\"${ styles.listInfo }\">\r\n        <div class=\"${ styles.container }\">\r\n          <div class=\"${ styles.row }\">\r\n            <div class=\"${ styles.column }\">\r\n              <span class=\"${ styles.title }\">Welcome to SharePoint!</span>\r\n              <p class=\"${ styles.subTitle }\">Customize SharePoint experiences using Web Parts.</p>\r\n              <p class=\"${ styles.description }\">${escape(this.properties.description)}</p>\r\n              <a href=\"https://aka.ms/spfx\" class=\"${ styles.button }\">\r\n                <span class=\"${ styles.label }\">Learn more</span>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n      \r\n  }\r\n\r\n  // protected get dataVersion(): Version {\r\n  //   return Version.parse('1.0');\r\n  // }\r\n\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPaneDescription\r\n          },\r\n          groups: [\r\n            {\r\n              groupName: strings.BasicGroupName,\r\n              groupFields: [\r\n                PropertyPaneTextField('description', {\r\n                  label: strings.DescriptionFieldLabel,\r\n                  onGetErrorMessage: this.validateDescription.bind(this)\r\n                }),\r\n                PropertyPaneTextField('listName', {\r\n                  label: strings.ListNameFieldLabel,\r\n                  onGetErrorMessage: this.validateListName.bind(this),\r\n                  deferredValidationTime: 500\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  private validateDescription(value: string): string {\r\n    if(value === null || \r\n      value.trim().length === 0) {\r\n        return 'Provide a description';\r\n      }\r\n    if (value.length > 40) {\r\n      return 'Description should not be longer than 40 characters'\r\n    }\r\n    return;\r\n  }\r\n\r\n  private async validateListName(value:string): Promise<string> {\r\n    if (value === null || value.length === 0) {\r\n      return 'Provide the list name'\r\n    }\r\n\r\n    try {\r\n      let response = await this.context.spHttpClient.get(\r\n        this.context.pageContext.web.absoluteUrl +\r\n        `/_api/web/lists/getByTitle('${escape(value)}')?$select=Id`,\r\n        SPHttpClient.configurations.v1\r\n      );\r\n\r\n      if (response.ok) {\r\n        return '';\r\n      } else if (response.status === 404) {\r\n        return `List '${escape(value)}' doesn't exist in the current site`;\r\n      }else{\r\n        return `Error: ${response.statusText}. Please try again`;\r\n      }\r\n    } catch (error) {\r\n      return error.message;\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}